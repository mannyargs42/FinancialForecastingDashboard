# -*- coding: utf-8 -*-
"""01data_generation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_0eJSksGvw2-g-ARP9x0PV9hEQEB7Lhz
"""

!pip install -q -U google-generativeai

import json
import random
import datetime
from google.colab import drive

# Generate customer data.
def generate_saas_data(num_customers):
    """
    Generates a synthetic SaaS customer dataset.
    Args:
        num_customers (int): The number of customer records to generate.
    Returns:
        A list of dictionaries representing the customer data.
    """
    customers = []
    plan_types = ['Basic', 'Pro', 'Enterprise']
    for i in range(1, num_customers + 1):
        start_date = datetime.date(random.randint(2022, 2024), random.randint(1, 12), random.randint(1, 28))
        start_date_str = start_date.strftime("%Y-%m-%d")
        mrr = random.uniform(100, 5000)

        # Churn date at random.
        if random.random() < 0.2:
            churn_date = (start_date + datetime.timedelta(days=random.randint(30, 365))).strftime("%Y-%m-%d")
        else:
            churn_date = None
        plan_type = random.choice(plan_types)

        # Introduce outliers and missing data.
        if random.random() < 0.01:
            mrr = random.uniform(10000, 20000)
        if random.random() < 0.02:
            mrr = None

        customer = {
            "customer_id": i,
            "subscription_start_date": start_date_str,
            "monthly_recurring_revenue": mrr,
            "churn_date": churn_date,
            "plan_type": plan_type
        }
        customers.append(customer)
    return customers

# Generate the data and save it to a JSON file
try:
    saas_data = generate_saas_data(5000)

    drive_path = '/content/drive/MyDrive/Colab Notebooks/FinancialForecastingDashboard/raw_saas_data.json'

    with open(drive_path, 'w') as raw_saas_customers:
        json.dump(saas_data, raw_saas_customers, indent=4)

    print("Data generated and saved to raw_saas_data.json successfully!")
    print(f"Number of records: {len(saas_data)}")

except Exception as e:
    print(f"An error occurred: {e}")

